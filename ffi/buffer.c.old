/**********************************************************
C:
**********************************************************/

#include "EXTERN.h"
#include "perl.h"
#include "XSUB.h"

void
scalar_to_buffer(SV *sv, void **ptr, STRLEN *size)
{
  *ptr = SvPV(sv, *size);
}

void
buffer_to_scalar(SV *sv, void *ptr, STRLEN size)
{
  sv_setpvn(sv, ptr, size);
}

/**********************************************************
perl:
**********************************************************/

attach_function "scalar_to_buffer", [ _ptr, _ptr, _ptr ], _void, sub
{
  my $cb = $_[0];
  my $ptr  = $_[2] || FFI::Raw::MemPtr->new_from_ptr(0);
  my $size = $_[3] || FFI::Raw::MemPtr->new(8); # FIXME: STRLEN
  my $ref = \$_[1];
  $_[0]->(refaddr($ref), $ptr, $size);
  if(defined wantarray)
  { return (deref_to_ptr(ref $ptr ? $$ptr : $ptr), deref_to_uint64(ref $size ? $$size : $size)) }
  else
  { return; }
};

attach_function "buffer_to_scalar", [ _ptr, _ptr, _ptr ], _void, sub
{
  my($cb, $ptr, $size) = @_;
  my $sv = '\x00' x $size;
  $cb->(\$sv, $ptr, $size);
  $sv;
};

